'use client';
import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";
import Footer from "@/components/Footer";
import {Toaster} from "@/components/ui/toaster";
import React, {useEffect} from "react";
import {usePathname} from "next/navigation";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
    const page = window.location.pathname;
    const [startTime, setStartTime] = React.useState<number | null>(null);
    const pathname = usePathname();


    const logTimeSpentOnPage = () => {
        if (startTime) {
            const timeSpent = Date.now() - startTime;
            console.log(`Time spent on ${page}: ${timeSpent} ms`);
            // Send timeSpent to server or analytics service here, if needed
        }
    };

    useEffect(() => {
        // Start tracking with a 2-second delay when the component mounts
        console.log(`Component mounted, current pathname: ${pathname}`);
        setStartTime(Date.now());


        return () => {

            logTimeSpentOnPage();
            console.log('Logging time spent...');
            setStartTime(null); // Reset start time on unmount

        };
    }, [pathname, page]);
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
        style={{
          display: "flex",
          flexDirection: "column",
          minHeight: "100vh",
        }}
      >
        <main style={{ flex: 1 }}>
          {children}
        </main>
        <Footer /> {/* Footer 在页面内容之后 */}
        <Toaster />
      </body>
    </html>
  );
}
